diff --git a/node_modules/expensify-common/dist/CONST.js b/node_modules/expensify-common/dist/CONST.js
index 938a86a..0f7a4d5 100644
--- a/node_modules/expensify-common/dist/CONST.js
+++ b/node_modules/expensify-common/dist/CONST.js
@@ -339,13 +339,13 @@ const CONST = {
          * @type RegExp
          */
         // eslint-disable-next-line no-misleading-character-class
-        EMOJIS: /[\p{Extended_Pictographic}\u200d\u{1f1e6}-\u{1f1ff}\u{1f3fb}-\u{1f3ff}\u{e0020}-\u{e007f}\u20E3\uFE0F]|[#*0-9]\uFE0F?\u20E3/gu,
+        EMOJIS: /(?:[\xA9\xAE\u200D\u203C\u2049\u20E3\u2122\u2139\u2194-\u2199\u21A9\u21AA\u231A\u231B\u2328\u2388\u23CF\u23E9-\u23F3\u23F8-\u23FA\u24C2\u25AA\u25AB\u25B6\u25C0\u25FB-\u25FE\u2600-\u2605\u2607-\u2612\u2614-\u2685\u2690-\u2705\u2708-\u2712\u2714\u2716\u271D\u2721\u2728\u2733\u2734\u2744\u2747\u274C\u274E\u2753-\u2755\u2757\u2763-\u2767\u2795-\u2797\u27A1\u27B0\u27BF\u2934\u2935\u2B05-\u2B07\u2B1B\u2B1C\u2B50\u2B55\u3030\u303D\u3297\u3299\uFE0F]|\uD83C[\uDC00-\uDCFF\uDD0D-\uDD0F\uDD2F\uDD6C-\uDD71\uDD7E\uDD7F\uDD8E\uDD91-\uDD9A\uDDAD-\uDDFF\uDE01-\uDE0F\uDE1A\uDE2F\uDE32-\uDE3A\uDE3C-\uDE3F\uDE49-\uDFFF]|\uD83D[\uDC00-\uDD3D\uDD46-\uDE4F\uDE80-\uDEFF\uDF74-\uDF7F\uDFD5-\uDFFF]|\uD83E[\uDC0C-\uDC0F\uDC48-\uDC4F\uDC5A-\uDC5F\uDC88-\uDC8F\uDCAE-\uDCFF\uDD0C-\uDD3A\uDD3C-\uDD45\uDD47-\uDEFF]|\uD83F[\uDC00-\uDFFD]|\uDB40[\uDC20-\uDC7F])|[#\*0-9]\uFE0F?\u20E3/g,
         /**
          * Regex matching an text containing an Emoji that can be a single emoji or made up by some different emojis
          *
          * @type RegExp
          */
-        EMOJI_RULE: /[\p{Extended_Pictographic}](\u200D[\p{Extended_Pictographic}]|[\u{1F3FB}-\u{1F3FF}]|[\u{E0020}-\u{E007F}]|\uFE0F|\u20E3)*|[\u{1F1E6}-\u{1F1FF}]{2}|[#*0-9]\uFE0F?\u20E3/gu,
+        EMOJI_RULE: /(?:[\xA9\xAE\u203C\u2049\u2122\u2139\u2194-\u2199\u21A9\u21AA\u231A\u231B\u2328\u2388\u23CF\u23E9-\u23F3\u23F8-\u23FA\u24C2\u25AA\u25AB\u25B6\u25C0\u25FB-\u25FE\u2600-\u2605\u2607-\u2612\u2614-\u2685\u2690-\u2705\u2708-\u2712\u2714\u2716\u271D\u2721\u2728\u2733\u2734\u2744\u2747\u274C\u274E\u2753-\u2755\u2757\u2763-\u2767\u2795-\u2797\u27A1\u27B0\u27BF\u2934\u2935\u2B05-\u2B07\u2B1B\u2B1C\u2B50\u2B55\u3030\u303D\u3297\u3299]|\uD83C[\uDC00-\uDCFF\uDD0D-\uDD0F\uDD2F\uDD6C-\uDD71\uDD7E\uDD7F\uDD8E\uDD91-\uDD9A\uDDAD-\uDDE5\uDE01-\uDE0F\uDE1A\uDE2F\uDE32-\uDE3A\uDE3C-\uDE3F\uDE49-\uDFFA]|\uD83D[\uDC00-\uDD3D\uDD46-\uDE4F\uDE80-\uDEFF\uDF74-\uDF7F\uDFD5-\uDFFF]|\uD83E[\uDC0C-\uDC0F\uDC48-\uDC4F\uDC5A-\uDC5F\uDC88-\uDC8F\uDCAE-\uDCFF\uDD0C-\uDD3A\uDD3C-\uDD45\uDD47-\uDEFF]|\uD83F[\uDC00-\uDFFD])(\u200D(?:[\xA9\xAE\u203C\u2049\u2122\u2139\u2194-\u2199\u21A9\u21AA\u231A\u231B\u2328\u2388\u23CF\u23E9-\u23F3\u23F8-\u23FA\u24C2\u25AA\u25AB\u25B6\u25C0\u25FB-\u25FE\u2600-\u2605\u2607-\u2612\u2614-\u2685\u2690-\u2705\u2708-\u2712\u2714\u2716\u271D\u2721\u2728\u2733\u2734\u2744\u2747\u274C\u274E\u2753-\u2755\u2757\u2763-\u2767\u2795-\u2797\u27A1\u27B0\u27BF\u2934\u2935\u2B05-\u2B07\u2B1B\u2B1C\u2B50\u2B55\u3030\u303D\u3297\u3299]|\uD83C[\uDC00-\uDCFF\uDD0D-\uDD0F\uDD2F\uDD6C-\uDD71\uDD7E\uDD7F\uDD8E\uDD91-\uDD9A\uDDAD-\uDDE5\uDE01-\uDE0F\uDE1A\uDE2F\uDE32-\uDE3A\uDE3C-\uDE3F\uDE49-\uDFFA]|\uD83D[\uDC00-\uDD3D\uDD46-\uDE4F\uDE80-\uDEFF\uDF74-\uDF7F\uDFD5-\uDFFF]|\uD83E[\uDC0C-\uDC0F\uDC48-\uDC4F\uDC5A-\uDC5F\uDC88-\uDC8F\uDCAE-\uDCFF\uDD0C-\uDD3A\uDD3C-\uDD45\uDD47-\uDEFF]|\uD83F[\uDC00-\uDFFD])|(?:\uD83C[\uDFFB-\uDFFF])|(?:\uDB40[\uDC20-\uDC7F])|\uFE0F|\u20E3)*|(?:\uD83C[\uDDE6-\uDDFF]){2}|[#\*0-9]\uFE0F?\u20E3/g,
     },
     REPORT: {
         /**
diff --git a/node_modules/expensify-common/dist/ExpensiMark.d.ts b/node_modules/expensify-common/dist/ExpensiMark.d.ts
index a10aa20..7affd2a 100644
--- a/node_modules/expensify-common/dist/ExpensiMark.d.ts
+++ b/node_modules/expensify-common/dist/ExpensiMark.d.ts
@@ -40,14 +40,14 @@ declare type ExtrasObject = {
     reportIDToName?: Record<string, string>;
     accountIDToName?: Record<string, string>;
 };
-export default class ExpensiMark {
+declare const ExpensiMark: {
     static Log: Logger;
     static setLogger(logger: Logger): void;
 
     rules: Rule[];
     htmlToMarkdownRules: Rule[];
     htmlToTextRules: Rule[];
-    constructor();
+    initializer(): void;
     /**
      * Replaces markdown with html elements
      *
@@ -144,4 +144,4 @@ export default class ExpensiMark {
      */
     getRemovedMarkdownLinks(oldComment: string, newComment: string): string[];
 }
-export {};
+export default ExpensiMark;
diff --git a/node_modules/expensify-common/dist/ExpensiMark.js b/node_modules/expensify-common/dist/ExpensiMark.js
index 75a355e..398bb85 100644
--- a/node_modules/expensify-common/dist/ExpensiMark.js
+++ b/node_modules/expensify-common/dist/ExpensiMark.js
@@ -34,15 +34,15 @@ const Logger_1 = __importDefault(require("./Logger"));
 const MARKDOWN_LINK_REGEX = new RegExp(`\\[([^\\][]*(?:\\[[^\\][]*][^\\][]*)*)]\\(${UrlPatterns.MARKDOWN_URL_REGEX}\\)(?![^<]*(<\\/pre>|<\\/code>))`, 'gi');
 const MARKDOWN_IMAGE_REGEX = new RegExp(`\\!(?:\\[([^\\][]*(?:\\[[^\\][]*][^\\][]*)*)])?\\(${UrlPatterns.MARKDOWN_URL_REGEX}\\)(?![^<]*(<\\/pre>|<\\/code>))`, 'gi');
 const SLACK_SPAN_NEW_LINE_TAG = '<span class="c-mrkdwn__br" data-stringify-type="paragraph-break" style="box-sizing: inherit; display: block; height: unset;"></span>';
-class ExpensiMark {
+const ExpensiMark = {
     /**
      * Set the logger to use for logging inside of the ExpensiMark class
      * @param {Object} logger - The logger object to use
      */
-    static setLogger(logger) {
+    setLogger(logger) {
         ExpensiMark.Log = logger;
-    }
-    constructor() {
+    },
+    initializer() {
         /**
          * The list of regex replacements to do on a comment. Check the link regex is first so links are processed
          * before other delimiters
@@ -604,7 +604,8 @@ class ExpensiMark {
          * @type {Number}
          */
         this.currentQuoteDepth = 0;
-    }
+    },
+    
     getHtmlRuleset(filterRules, disabledRules, shouldKeepRawInput) {
         let rules = this.rules;
         const hasRuleName = (rule) => _.contains(filterRules, rule.name);
@@ -619,7 +620,7 @@ class ExpensiMark {
             rules = _.filter(rules, hasDisabledRuleName);
         }
         return rules;
-    }
+    },
     /**
      * Replaces markdown with html elements
      *
@@ -664,7 +665,7 @@ class ExpensiMark {
             return shouldEscapeText ? _.escape(text) : text;
         }
         return replacedText;
-    }
+    },
     /**
      * Checks matched URLs for validity and replace valid links with html elements
      *
@@ -765,7 +766,7 @@ class ExpensiMark {
             replacedText = replacedText.concat(textToCheck.substr(startIndex));
         }
         return replacedText;
-    }
+    },
     /**
      * Checks matched Emails for validity and replace valid links with html elements
      *
@@ -799,7 +800,7 @@ class ExpensiMark {
             replacedText = replacedText.concat(textToCheck.substr(startIndex));
         }
         return replacedText;
-    }
+    },
     /**
      * replace block element with '\n' if :
      * 1. We have text within the element.
@@ -837,7 +838,7 @@ class ExpensiMark {
         };
         splitText.forEach(processText);
         return joinedText;
-    }
+    },
     /**
      * Replaces HTML with markdown
      *
@@ -865,7 +866,7 @@ class ExpensiMark {
         };
         this.htmlToMarkdownRules.forEach(processRule);
         return str_1.default.htmlDecode(this.replaceBlockElementWithNewLine(generatedMarkdown));
-    }
+    },
     /**
      * Convert HTML to text
      *
@@ -886,7 +887,7 @@ class ExpensiMark {
         // We use 'htmlDecode' instead of 'unescape' to replace entities like '&#32;'
         replacedText = str_1.default.htmlDecode(replacedText);
         return replacedText;
-    }
+    },
     /**
      * Modify text for Quotes replacing chevrons with html elements
      *
@@ -943,7 +944,7 @@ class ExpensiMark {
             replacedText = textToCheck;
         }
         return replacedText;
-    }
+    },
     /**
      * Format the content of blockquote if the text matches the regex or else just return the original text
      *
@@ -969,7 +970,7 @@ class ExpensiMark {
             return replacement(textToFormat);
         }
         return textToCheck;
-    }
+    },
     /**
      * Check if the input text includes only the open or the close tag of an element.
      *
@@ -1003,7 +1004,7 @@ class ExpensiMark {
         }
         // If there are any tags left in the stack, they're unclosed
         return tagStack.length !== 0;
-    }
+    },
     /**
      * @param {String} comment
      * @returns {Array} or undefined if exception occurs when executing regex matching
@@ -1024,7 +1025,7 @@ class ExpensiMark {
             console.warn('Error parsing url in ExpensiMark.extractLinksInMarkdownComment', { error: e });
             return undefined;
         }
-    }
+    },
     /**
      * Compares two markdown comments and returns a list of the links removed in a new comment.
      *
@@ -1036,7 +1037,7 @@ class ExpensiMark {
         const linksInOld = this.extractLinksInMarkdownComment(oldComment);
         const linksInNew = this.extractLinksInMarkdownComment(newComment);
         return linksInOld === undefined || linksInNew === undefined ? [] : _.difference(linksInOld, linksInNew);
-    }
+    },
     /**
      * Escapes the content of an HTML attribute value
      * @param {String} content - string content that possible contains HTML
@@ -1059,4 +1060,5 @@ ExpensiMark.Log = new Logger_1.default({
     clientLoggingCallback: (message) => console.warn(message),
     isDebug: true,
 });
+ExpensiMark.initializer();
 exports.default = ExpensiMark;
